{
  "version": 4,
  "terraform_version": "1.13.1",
  "serial": 11,
  "lineage": "161a7e02-b488-b9b0-b716-c188fc9c85ca",
  "outputs": {
    "application_urls": {
      "value": {
        "metabase": "http://44.238.218.183:3000",
        "prefect": "http://44.238.218.183:4200"
      },
      "type": [
        "object",
        {
          "metabase": "string",
          "prefect": "string"
        }
      ]
    },
    "deployment_commands": {
      "value": [
        "1. SSH into the instance: ssh -i ~/.ssh/music-tracker-key.pem ubuntu@44.238.218.183",
        "2. Copy your application code to /opt/music-tracker",
        "3. Start the application: sudo systemctl start music-tracker",
        "4. Check status: sudo systemctl status music-tracker",
        "5. Access Metabase at: http://44.238.218.183:3000",
        "6. Access Prefect at: http://44.238.218.183:4200"
      ],
      "type": [
        "list",
        "string"
      ]
    },
    "dns_records": {
      "value": {
        "note": "No domain configured. Access via IP: 44.238.218.183"
      },
      "type": [
        "map",
        "string"
      ]
    },
    "instance_name": {
      "value": "music-tracker-instance",
      "type": "string"
    },
    "instance_public_ip": {
      "value": "44.238.218.183",
      "type": "string"
    },
    "ssh_connection": {
      "value": "ssh -i ~/.ssh/music-tracker-key.pem ubuntu@44.238.218.183",
      "type": "string"
    },
    "ssh_key_name": {
      "value": "music-tracker-key",
      "type": "string"
    },
    "ssh_private_key": {
      "value": "-----BEGIN RSA PRIVATE KEY-----\nMIIEogIBAAKCAQEA12AW5g3TbNb04zN3EgT6YCoPNgoAsS9AWmVEyxBjM0CNyPLg\nT6SOhoWeV2iLXyEVy1G3+n0MjHkyejMU2DMZjBt5vjVZ6+4CeX6XmZvmyx9yEJ8B\n7IAfy8ssAEeKUfir5KI5NX+1visWkALtR5EdYdjXjHAdYEczaMGXTqLtaXvmaP0D\n1MSkzsRsQBjrR4nKpTVTzRr4dSDx0d8uwQNriTflayGGQ4dBEuyWnSttLWcjb91G\nJQNXDGRqdU/d84FaYmHITECNjOnBW7RYwEj5BvF09ruL2+2dqmrUoj/IySFxyrsF\nd+Fers7jlMt9Xp88f/sNDwVGqW5mMaYNz3px4wIDAQABAoIBAFNKrPBhTm+cHe6z\n24uTc0S3X1SVv7jGPkv3OAiUGNkcUPjyvL7wM9JgYGELZELw553Ox6jOrYix4kyR\n7rDB6lJd2dIujc0JKdnUlEpqmXHagmFdLQBKeIF23FhrUlnrIob0Gc3Pyvh1b29Y\nQm1X+JX7pzh/r0ypnH8Zxys5JTmSY/KEP4JFfSvwgRp6h4DppFsaatdO9lxPQ0vR\ntrBn7GZ2N6R6gh3fD9OpSwrhpkTnSq1iH8xFjlpmxIP9gpeWmoulMiiI9cioVN5R\n3ht/F/7IX5a4m+LtX7IBTLdLjxisaGrMMDteoFNlnVTWohVa92mNpypk2ZKxU5Xr\n384VE4ECgYEA++9CfrPoj+xhz7sxe5xIYRmG3jbKsSHPgUaCCL0jvyCV/vAWp+/7\n3Y6EgVWPdhUVa/zg23FIMLUPmMdPmuArDXU9yETCSUbNrox3KV8/08jGcmscc/bx\n8wQ7tbfmrXx0R9nPccG2ijvJ59sfc1y7z7jo4pu/JGqNSrNO/b9qfcECgYEA2tnN\nuyvmUbIeHmSbIujy1kBAnaD2LKWhvlQQGyK0Z4dcwrUUPF6K0OjdtS5FGTL9P9ni\nCDzAm56pHp5Vr+YGFxZqEe4mTBh5U71iQAA/5/GH6/WgGOYsHOneSdOwiy6ANIEX\nGakHIJZkdP+uAm6ZyzaM/foRA9ZZX2CRpiiEYKMCgYAENpQeGlQhVAqutqq1Ln/n\nX83pmXD6VV5rAwrZqpAWei0H/mvikxjbM67zmsKzbtbU333DLbnPVrfUDkE+jdEq\ngHNwDfZR02VNLfwwLO+cUxc+gpwPNGoHbmKxP0oUTKiFKxdVB7BNz4Io5nk4LKzX\nZHhAkeo4aa/DOAxyIeleAQKBgBtHdN50zWO3iQuOzMugL8zG+4bqbmUITE32Gn/X\nZpdVBxn6CkiwHCuIK0KPPuuyMGEKHqOaNwPu1fPMFrAzQuUT1Srg/YMUteLbQ2jo\n3w5hS+j8l/Uik7MS77NSILpolHB2+tMm/41vUZxH1n/VG3R6Gz75Ma/BwyghWGZW\nvJFzAoGAT24eXXr9ZPdmczLJOUAEUtKlMVQ/oVjfbcU/bLCAlvsow0TjEjQRFMuN\newPNq05D4XeTiznCR521TcP58s6ZueNP0ZIa+s/hMKMKDydCGK2f0559xl89I3/i\n5uvZZRf+9ua+i05m/Ra8jn5/5VW/DVaznWEexBZoSSgFH83jCMQ=\n-----END RSA PRIVATE KEY-----",
      "type": "string",
      "sensitive": true
    }
  },
  "resources": [
    {
      "mode": "managed",
      "type": "aws_lightsail_instance",
      "name": "music_tracker",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "add_on": [],
            "arn": "arn:aws:lightsail:us-west-2:412235697148:Instance/21706e6c-7e1d-45f5-aa94-8c1cd973bc0a",
            "availability_zone": "us-west-2a",
            "blueprint_id": "ubuntu_22_04",
            "bundle_id": "medium_2_0",
            "cpu_count": 2,
            "created_at": "2025-09-07T16:11:24Z",
            "id": "music-tracker-instance",
            "ip_address_type": "dualstack",
            "ipv6_addresses": [
              "2600:1f14:35c8:8b00:7e17:9177:3ca7:a45a"
            ],
            "is_static_ip": true,
            "key_pair_name": "music-tracker-key",
            "name": "music-tracker-instance",
            "private_ip_address": "172.26.7.58",
            "public_ip_address": "44.238.218.183",
            "ram_size": 4,
            "tags": {
              "Application": "music-tracker",
              "Environment": "production"
            },
            "tags_all": {
              "Application": "music-tracker",
              "Environment": "production"
            },
            "user_data": "#!/bin/bash\n# Simplified setup for internal-only Music Tracker deployment\nset -e\n\n# Update system\napt-get update \u0026\u0026 apt-get upgrade -y\n\n# Install Docker\ncurl -fsSL https://get.docker.com -o get-docker.sh\nsh get-docker.sh\nusermod -aG docker ubuntu\n\n# Install Docker Compose\ncurl -L \"https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)\" -o /usr/local/bin/docker-compose\nchmod +x /usr/local/bin/docker-compose\n\n# Create application directory\nmkdir -p /opt/music-tracker\ncd /opt/music-tracker\n\n# Create directories for persistent data\nmkdir -p data logs scripts\n\n# Create internal-only docker-compose configuration\ncat \u003e docker-compose.internal.yml \u003c\u003c 'EOF'\nservices:\n  # Main data processing and dbt service\n  data-pipeline:\n    build: \n      context: .\n      dockerfile: Dockerfile\n    container_name: music-tracker-pipeline\n    volumes:\n      - ./data:/app/data\n      - ./dbt:/app/dbt\n      - ./flows:/app/flows\n      - ./scripts:/app/scripts\n      - ./logs:/app/logs\n    environment:\n      - DUCKDB_PATH=/app/data/music_tracker.duckdb\n      - LOG_LEVEL=INFO\n      - SPOTIFY_CLIENT_ID=81d3902fc3394704b6bb50c552d06520\n      - SPOTIFY_CLIENT_SECRET=bd776cb38c3042f09ed46381800e038d\n      - METABASE_DB_PASSWORD=kJ8mN9qR3vX2wE5t\n      - PREFECT_DB_PASSWORD=kJ8mN9qR3vX2wE5t\n    networks:\n      - music-tracker\n    depends_on:\n      - metabase\n    restart: unless-stopped\n\n  # Metabase for reporting (internal access)\n  metabase:\n    build:\n      context: .\n      dockerfile: metabase.Dockerfile\n    container_name: music-tracker-metabase\n    ports:\n      - \"3000:3000\"  # Direct access for internal use\n    volumes:\n      - metabase-data:/home\n      - ./data:/data\n    environment:\n      - MB_DB_TYPE=postgres\n      - MB_DB_DBNAME=metabase\n      - MB_DB_PORT=5432\n      - MB_DB_USER=metabase\n      - MB_DB_PASS=kJ8mN9qR3vX2wE5t\n      - MB_DB_HOST=metabase-db\n      - MB_PLUGINS_DIR=/home/plugins/\n    networks:\n      - music-tracker\n    depends_on:\n      - metabase-db\n    restart: unless-stopped\n\n  # PostgreSQL for Metabase metadata\n  metabase-db:\n    image: postgres:15-alpine\n    container_name: music-tracker-metabase-db\n    environment:\n      - POSTGRES_DB=metabase\n      - POSTGRES_USER=metabase\n      - POSTGRES_PASSWORD=kJ8mN9qR3vX2wE5t\n    volumes:\n      - metabase-db-data:/var/lib/postgresql/data\n    networks:\n      - music-tracker\n    restart: unless-stopped\n\n  # Prefect for orchestration (internal access)\n  prefect-server:\n    image: prefecthq/prefect:3.4.0-python3.11\n    container_name: music-tracker-prefect\n    ports:\n      - \"4200:4200\"  # Direct access for internal use\n    environment:\n      - PREFECT_API_URL=http://localhost:4200/api\n      - PREFECT_SERVER_API_HOST=0.0.0.0\n      - PREFECT_SERVER_API_PORT=4200\n      - PREFECT_API_DATABASE_CONNECTION_URL=postgresql+asyncpg://prefect:kJ8mN9qR3vX2wE5t@prefect-db:5432/prefect\n      - PREFECT_SERVER_ANALYTICS_ENABLED=false\n    volumes:\n      - prefect-data:/opt/prefect\n    networks:\n      - music-tracker\n    depends_on:\n      - prefect-db\n    restart: unless-stopped\n    command: prefect server start --host 0.0.0.0 --port 4200\n\n  prefect-worker:\n    build: \n      context: .\n      dockerfile: Dockerfile\n    container_name: music-tracker-prefect-worker\n    environment:\n      - PREFECT_API_URL=http://prefect-server:4200/api\n      - PREFECT_WORK_POOL_NAME=default-agent-pool\n      - SPOTIFY_CLIENT_ID=81d3902fc3394704b6bb50c552d06520\n      - SPOTIFY_CLIENT_SECRET=bd776cb38c3042f09ed46381800e038d\n      - DUCKDB_PATH=/app/data/music_tracker.duckdb\n      - LOG_LEVEL=INFO\n    volumes:\n      - ./data:/app/data\n      - ./logs:/app/logs\n      - ./flows:/app/flows\n    networks:\n      - music-tracker\n    depends_on:\n      - prefect-server\n    restart: unless-stopped\n    command: \u003e\n      bash -c \"\n        echo 'Waiting for Prefect server to be ready...';\n        until curl -f http://prefect-server:4200/api/health \u003e /dev/null 2\u003e\u00261; do\n          echo 'Prefect server not ready, waiting...';\n          sleep 5;\n        done;\n        echo 'Prefect server is ready!';\n        sleep 5;\n        echo 'Starting Prefect worker...';\n        prefect worker start --pool default-agent-pool\n      \"\n\n  prefect-deployer:\n    build:\n      context: .\n      dockerfile: Dockerfile\n    container_name: music-tracker-prefect-deployer\n    environment:\n      - PREFECT_API_URL=http://prefect-server:4200/api\n      - PREFECT_WORK_POOL_NAME=default-agent-pool\n      - SPOTIFY_CLIENT_ID=81d3902fc3394704b6bb50c552d06520\n      - SPOTIFY_CLIENT_SECRET=bd776cb38c3042f09ed46381800e038d\n      - DUCKDB_PATH=/app/data/music_tracker.duckdb\n      - LOG_LEVEL=INFO\n    volumes:\n      - ./data:/app/data\n      - ./logs:/app/logs\n      - ./flows:/app/flows\n    networks:\n      - music-tracker\n    depends_on:\n      - prefect-worker\n    restart: \"no\"\n    command: \u003e\n      bash -c \"\n        echo 'Waiting for Prefect server to be ready...';\n        until curl -f http://prefect-server:4200/api/health \u003e /dev/null 2\u003e\u00261; do\n          echo 'Prefect server not ready, waiting...';\n          sleep 5;\n        done;\n        echo 'Prefect server is ready!';\n        echo 'Waiting for worker to be ready...';\n        sleep 15;\n        echo 'Deploying flows...';\n        cd /app \u0026\u0026 PYTHONPATH=/app uv run python flows/orchestrate/deploy_flows.py;\n        echo 'Flow deployment completed!';\n      \"\n\n  # PostgreSQL for Prefect\n  prefect-db:\n    image: postgres:15-alpine\n    container_name: music-tracker-prefect-db\n    environment:\n      - POSTGRES_DB=prefect\n      - POSTGRES_USER=prefect\n      - POSTGRES_PASSWORD=kJ8mN9qR3vX2wE5t\n    volumes:\n      - prefect-db-data:/var/lib/postgresql/data\n    networks:\n      - music-tracker\n    restart: unless-stopped\n\nvolumes:\n  metabase-data:\n  metabase-db-data:\n  prefect-data:\n  prefect-db-data:\n\nnetworks:\n  music-tracker:\n    driver: bridge\nEOF\n\n# Create environment file\ncat \u003e .env \u003c\u003c 'EOF'\nSPOTIFY_CLIENT_ID=81d3902fc3394704b6bb50c552d06520\nSPOTIFY_CLIENT_SECRET=bd776cb38c3042f09ed46381800e038d\nMETABASE_DB_PASSWORD=kJ8mN9qR3vX2wE5t\nPREFECT_DB_PASSWORD=kJ8mN9qR3vX2wE5t\nEOF\n\n# Set permissions\nchown -R ubuntu:ubuntu /opt/music-tracker\n\n# Create systemd service for automatic startup\ncat \u003e /etc/systemd/system/music-tracker.service \u003c\u003c 'EOF'\n[Unit]\nDescription=Music Tracker Application\nRequires=docker.service\nAfter=docker.service\n\n[Service]\nType=oneshot\nRemainAfterExit=yes\nWorkingDirectory=/opt/music-tracker\nExecStart=/usr/local/bin/docker-compose -f docker-compose.internal.yml up -d\nExecStop=/usr/local/bin/docker-compose -f docker-compose.internal.yml down\nTimeoutStartSec=0\nUser=ubuntu\nGroup=ubuntu\n\n[Install]\nWantedBy=multi-user.target\nEOF\n\n# Create backup cron job\ncat \u003e /etc/cron.d/music-tracker-backup \u003c\u003c 'EOF'\n# Run backup daily at 3 AM\n0 3 * * * root /opt/music-tracker/scripts/backup.sh \u003e\u003e /var/log/music-tracker-backup.log 2\u003e\u00261\nEOF\n\n# Enable services\nsystemctl enable music-tracker\nsystemctl daemon-reload\n\n# Install log rotation\ncat \u003e /etc/logrotate.d/music-tracker \u003c\u003c 'EOF'\n/opt/music-tracker/logs/*.log {\n    daily\n    rotate 7\n    compress\n    delaycompress\n    missingok\n    notifempty\n    copytruncate\n}\nEOF\n\n# Create basic health check script\ncat \u003e /opt/music-tracker/scripts/health_check.sh \u003c\u003c 'EOF'\n#!/bin/bash\n# Basic health check for Music Tracker services\n\necho \"=== Music Tracker Health Check ===\"\necho \"Date: $(date)\"\necho \"\"\n\n# Check container status\necho \"=== Container Status ===\"\ndocker ps --format \"table {{.Names}}\\t{{.Status}}\\t{{.Ports}}\" --filter \"name=music-tracker\"\necho \"\"\n\n# Check disk usage\necho \"=== Disk Usage ===\"\ndf -h /opt/music-tracker\necho \"\"\n\n# Check database sizes\necho \"=== Database Sizes ===\"\nif [ -f \"/opt/music-tracker/data/music_tracker.duckdb\" ]; then\n    du -sh /opt/music-tracker/data/music_tracker.duckdb\nfi\n\n# Check if services are responding\necho \"=== Service Health ===\"\ncurl -s http://localhost:3000/api/health \u0026\u0026 echo \"Metabase: OK\" || echo \"Metabase: ERROR\"\ncurl -s http://localhost:4200/api/health \u0026\u0026 echo \"Prefect: OK\" || echo \"Prefect: ERROR\"\n\necho \"\"\necho \"Health check completed.\"\nEOF\n\nchmod +x /opt/music-tracker/scripts/health_check.sh\n\necho \"Setup completed successfully!\"\necho \"\"\necho \"To deploy your application:\"\necho \"1. Copy your application files to /opt/music-tracker\"\necho \"2. Start the application: sudo systemctl start music-tracker\"\necho \"3. Check status: sudo systemctl status music-tracker\"\necho \"\"\necho \"Access URLs (replace with your server IP):\"\necho \"- Metabase: http://[SERVER_IP]:3000\"\necho \"- Prefect: http://[SERVER_IP]:4200\"\necho \"\"\necho \"Management commands:\"\necho \"- Health check: /opt/music-tracker/scripts/health_check.sh\"\necho \"- View logs: docker-compose -f /opt/music-tracker/docker-compose.internal.yml logs\"\necho \"- Manual backup: /opt/music-tracker/scripts/backup.sh\"",
            "username": "ubuntu"
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "user_data"
              }
            ]
          ],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "aws_lightsail_key_pair.music_tracker"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_lightsail_instance_public_ports",
      "name": "music_tracker",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "music-tracker-instance-3163072803",
            "instance_name": "music-tracker-instance",
            "port_info": [
              {
                "cidr_list_aliases": [],
                "cidrs": [
                  "0.0.0.0/0"
                ],
                "from_port": 22,
                "ipv6_cidrs": [],
                "protocol": "tcp",
                "to_port": 22
              },
              {
                "cidr_list_aliases": [],
                "cidrs": [
                  "0.0.0.0/0"
                ],
                "from_port": 443,
                "ipv6_cidrs": [],
                "protocol": "tcp",
                "to_port": 443
              },
              {
                "cidr_list_aliases": [],
                "cidrs": [
                  "0.0.0.0/0"
                ],
                "from_port": 80,
                "ipv6_cidrs": [],
                "protocol": "tcp",
                "to_port": 80
              }
            ]
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "aws_lightsail_instance.music_tracker",
            "aws_lightsail_key_pair.music_tracker"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_lightsail_key_pair",
      "name": "music_tracker",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:lightsail:us-west-2:412235697148:KeyPair/d1cdfa39-caae-4612-9f34-bc411eaa0f06",
            "encrypted_fingerprint": null,
            "encrypted_private_key": null,
            "fingerprint": "b1:78:e8:e6:55:51:98:f2:06:5f:1a:0e:0c:47:bd:c6:90:a1:13:05",
            "id": "music-tracker-key",
            "name": "music-tracker-key",
            "name_prefix": "",
            "pgp_key": null,
            "private_key": "-----BEGIN RSA PRIVATE KEY-----\nMIIEogIBAAKCAQEA12AW5g3TbNb04zN3EgT6YCoPNgoAsS9AWmVEyxBjM0CNyPLg\nT6SOhoWeV2iLXyEVy1G3+n0MjHkyejMU2DMZjBt5vjVZ6+4CeX6XmZvmyx9yEJ8B\n7IAfy8ssAEeKUfir5KI5NX+1visWkALtR5EdYdjXjHAdYEczaMGXTqLtaXvmaP0D\n1MSkzsRsQBjrR4nKpTVTzRr4dSDx0d8uwQNriTflayGGQ4dBEuyWnSttLWcjb91G\nJQNXDGRqdU/d84FaYmHITECNjOnBW7RYwEj5BvF09ruL2+2dqmrUoj/IySFxyrsF\nd+Fers7jlMt9Xp88f/sNDwVGqW5mMaYNz3px4wIDAQABAoIBAFNKrPBhTm+cHe6z\n24uTc0S3X1SVv7jGPkv3OAiUGNkcUPjyvL7wM9JgYGELZELw553Ox6jOrYix4kyR\n7rDB6lJd2dIujc0JKdnUlEpqmXHagmFdLQBKeIF23FhrUlnrIob0Gc3Pyvh1b29Y\nQm1X+JX7pzh/r0ypnH8Zxys5JTmSY/KEP4JFfSvwgRp6h4DppFsaatdO9lxPQ0vR\ntrBn7GZ2N6R6gh3fD9OpSwrhpkTnSq1iH8xFjlpmxIP9gpeWmoulMiiI9cioVN5R\n3ht/F/7IX5a4m+LtX7IBTLdLjxisaGrMMDteoFNlnVTWohVa92mNpypk2ZKxU5Xr\n384VE4ECgYEA++9CfrPoj+xhz7sxe5xIYRmG3jbKsSHPgUaCCL0jvyCV/vAWp+/7\n3Y6EgVWPdhUVa/zg23FIMLUPmMdPmuArDXU9yETCSUbNrox3KV8/08jGcmscc/bx\n8wQ7tbfmrXx0R9nPccG2ijvJ59sfc1y7z7jo4pu/JGqNSrNO/b9qfcECgYEA2tnN\nuyvmUbIeHmSbIujy1kBAnaD2LKWhvlQQGyK0Z4dcwrUUPF6K0OjdtS5FGTL9P9ni\nCDzAm56pHp5Vr+YGFxZqEe4mTBh5U71iQAA/5/GH6/WgGOYsHOneSdOwiy6ANIEX\nGakHIJZkdP+uAm6ZyzaM/foRA9ZZX2CRpiiEYKMCgYAENpQeGlQhVAqutqq1Ln/n\nX83pmXD6VV5rAwrZqpAWei0H/mvikxjbM67zmsKzbtbU333DLbnPVrfUDkE+jdEq\ngHNwDfZR02VNLfwwLO+cUxc+gpwPNGoHbmKxP0oUTKiFKxdVB7BNz4Io5nk4LKzX\nZHhAkeo4aa/DOAxyIeleAQKBgBtHdN50zWO3iQuOzMugL8zG+4bqbmUITE32Gn/X\nZpdVBxn6CkiwHCuIK0KPPuuyMGEKHqOaNwPu1fPMFrAzQuUT1Srg/YMUteLbQ2jo\n3w5hS+j8l/Uik7MS77NSILpolHB2+tMm/41vUZxH1n/VG3R6Gz75Ma/BwyghWGZW\nvJFzAoGAT24eXXr9ZPdmczLJOUAEUtKlMVQ/oVjfbcU/bLCAlvsow0TjEjQRFMuN\newPNq05D4XeTiznCR521TcP58s6ZueNP0ZIa+s/hMKMKDydCGK2f0559xl89I3/i\n5uvZZRf+9ua+i05m/Ra8jn5/5VW/DVaznWEexBZoSSgFH83jCMQ=\n-----END RSA PRIVATE KEY-----",
            "public_key": "ssh-rsa ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDXYBbmDdNs1vTjM3cSBPpgKg82CgCxL0BaZUTLEGMzQI3I8uBPpI6GhZ5XaItfIRXLUbf6fQyMeTJ6MxTYMxmMG3m+NVnr7gJ5fpeZm+bLH3IQnwHsgB/LyywAR4pR+Kvkojk1f7W+KxaQAu1HkR1h2NeMcB1gRzNowZdOou1pe+Zo/QPUxKTOxGxAGOtHicqlNVPNGvh1IPHR3y7BA2uJN+VrIYZDh0ES7JadK20tZyNv3UYlA1cMZGp1T93zgVpiYchMQI2M6cFbtFjASPkG8XT2u4vb7Z2qatSiP8jJIXHKuwV34V6uzuOUy31enzx/+w0PBUapbmYxpg3PenHj ",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_lightsail_static_ip",
      "name": "music_tracker",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:lightsail:us-west-2:412235697148:StaticIp/1744f0ee-dc95-4231-b3c0-96cb827b3893",
            "id": "music-tracker-static-ip",
            "ip_address": "44.238.218.183",
            "name": "music-tracker-static-ip",
            "support_code": "365021530974/44.238.218.183"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_lightsail_static_ip_attachment",
      "name": "music_tracker",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "music-tracker-static-ip",
            "instance_name": "music-tracker-instance",
            "ip_address": "44.238.218.183",
            "static_ip_name": "music-tracker-static-ip"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "bnVsbA==",
          "dependencies": [
            "aws_lightsail_instance.music_tracker",
            "aws_lightsail_key_pair.music_tracker",
            "aws_lightsail_static_ip.music_tracker"
          ]
        }
      ]
    }
  ],
  "check_results": null
}
