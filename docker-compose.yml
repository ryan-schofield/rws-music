services:
  # Main data processing and dbt service
  data-pipeline:
    build: .
    container_name: music-tracker-pipeline
    volumes:
      - ./data:/app/data
      - ./dbt:/app/dbt
      - ./scripts:/app/scripts
      - ./logs:/app/logs
    environment:
      - SPOTIFY_CLIENT_ID=${SPOTIFY_CLIENT_ID}
      - SPOTIFY_CLIENT_SECRET=${SPOTIFY_CLIENT_SECRET}
      - DUCKDB_PATH=/app/data/music_tracker.duckdb
      - LOG_LEVEL=INFO
    networks:
      - music-tracker
    # depends_on:
    #   - metabase  # Commented out since Metabase is disabled
    restart: unless-stopped

  # # Metabase for reporting (COMMENTED OUT)
  # metabase:
  #   image: metabase/metabase:latest
  #   container_name: music-tracker-metabase
  #   ports:
  #     - "3000:3000"
  #   volumes:
  #     - metabase-data:/metabase-data
  #   environment:
  #     - MB_DB_TYPE=postgres
  #     - MB_DB_DBNAME=metabase
  #     - MB_DB_PORT=5432
  #     - MB_DB_USER=metabase
  #     - MB_DB_PASS=${METABASE_DB_PASSWORD}
  #     - MB_DB_HOST=metabase-db
  #   networks:
  #     - music-tracker
  #   depends_on:
  #     - metabase-db
  #   restart: unless-stopped

  # # PostgreSQL for Metabase metadata (COMMENTED OUT)
  # metabase-db:
  #   image: postgres:15-alpine
  #   container_name: music-tracker-metabase-db
  #   environment:
  #     - POSTGRES_DB=metabase
  #     - POSTGRES_USER=metabase
  #     - POSTGRES_PASSWORD=${METABASE_DB_PASSWORD}
  #   volumes:
  #     - metabase-db-data:/var/lib/postgresql/data
  #   networks:
  #     - music-tracker
  #   restart: unless-stopped

  # Prefect for orchestration
  prefect-server:
    image: prefecthq/prefect:2-latest
    container_name: music-tracker-prefect
    ports:
      - "4200:4200"
    environment:
      - PREFECT_API_URL=http://localhost:4200/api
      - PREFECT_SERVER_API_HOST=0.0.0.0
      - PREFECT_SERVER_API_PORT=4200
      - PREFECT_DATABASE_CONNECTION_URL=postgresql+asyncpg://prefect:${PREFECT_DB_PASSWORD}@prefect-db:5432/prefect
      - PREFECT_ORION_DATABASE_CONNECTION_URL=postgresql+asyncpg://prefect:${PREFECT_DB_PASSWORD}@prefect-db:5432/prefect
      - PREFECT_SERVER_ANALYTICS_ENABLED=false
    volumes:
      - prefect-data:/opt/prefect
    networks:
      - music-tracker
    depends_on:
      - prefect-db
    restart: unless-stopped
    command: prefect server start --host 0.0.0.0 --port 4200

  prefect-agent:
    build: .
    container_name: music-tracker-prefect-agent
    environment:
      - PREFECT_API_URL=http://prefect-server:4200/api
      - PREFECT_AGENT_POOL_NAME=default-agent-pool
      - SPOTIFY_CLIENT_ID=${SPOTIFY_CLIENT_ID}
      - SPOTIFY_CLIENT_SECRET=${SPOTIFY_CLIENT_SECRET}
      - DUCKDB_PATH=/app/data/music_tracker.duckdb
      - LOG_LEVEL=INFO
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
    networks:
      - music-tracker
    depends_on:
      - prefect-server
    restart: unless-stopped
    command: >
      bash -c "
        echo 'Waiting for Prefect server to be ready...';
        until curl -f http://prefect-server:4200/api/health > /dev/null 2>&1; do
          echo 'Prefect server not ready, waiting...';
          sleep 5;
        done;
        echo 'Prefect server is ready!';
        sleep 5;
        echo 'Deploying flows...';
        uv run python scripts/orchestrate/deploy_flows.py || echo 'Flow deployment failed, continuing with agent...';
        echo 'Starting Prefect agent...';
        prefect agent start -p default-agent-pool
      "

  # PostgreSQL for Prefect
  prefect-db:
    image: postgres:15-alpine
    container_name: music-tracker-prefect-db
    environment:
      - POSTGRES_DB=prefect
      - POSTGRES_USER=prefect
      - POSTGRES_PASSWORD=${PREFECT_DB_PASSWORD}
    volumes:
      - prefect-db-data:/var/lib/postgresql/data
    networks:
      - music-tracker
    restart: unless-stopped

volumes:
  metabase-data:
  metabase-db-data:
  prefect-data:
  prefect-db-data:

networks:
  music-tracker:
    driver: bridge